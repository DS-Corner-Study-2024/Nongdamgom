스프링에 필요한 모듈들을 추가하다 보면 설정이 복잡해지는 문제를 해결-> 스프링 부트
스프링 부트를 이용하면 단독으로 실행 가능한 상용 수준의 스프링 기반 애플리케이션을 손쉽게 만들 수 있음

스프링 부트 특징
1. 의존성 관리
: 스프링 프레임워크에서는 개발에 필요한 각 모듈의 의존성을 직접 설정해야 함&호환되는 버전을 명시해야 정상 동작
스프링 부트는 이러한 불편함 해소=> 'spring-boot-starter'라는 의존성 제공(여러 종류, 각 라이브러리 기능과 관련해서 자주 사용되고 서로 호환되는 버전의 모듈 조합 제공)
많이 사용되는 spring-boot-starter 라이브러리
spring-boot-starter-web, spring-boot-starter-test, spring-boot-starter-jdbc, spring-boot-starter-security, spring-boot-starter-data-jpa, spring-boot-starter-cache

2. 자동 설정
: 스프링 프레임워크의 기능을 사용하기 위한 자동 설정을 지원함, 애플리케이션에 추가된 라이브러리를 실행하는 데 필요한 환경 설정을 알아서 찾아줌
=> 애플리케이션을 개발하는 데 필요한 의존성을 추가하면, 프레임워크가 이를 자동으로 관리해줌
(@Component 시리즈 애노테이션의 대표적인 예: @Controller, @RestController, @Service, @Repository, @Configuration)

3. 내장 WAS
: 스프링 부트의 각 웹 애플리케이션에는 내장 WAS(Web Application Server)가 존재
'spring-boot-starter'의 경우 톰캣 내장

4. 모니터링
: 개발이 끝나고 서비스를 운영하는 시기-> 해당 시스템이 사용되는 스레드, 메모리, 세션 등의 주요 요소들을 모니터링 해야 함
스프링 부트=> '스프링 부트 액추에이터' 자체 모니터링 도구
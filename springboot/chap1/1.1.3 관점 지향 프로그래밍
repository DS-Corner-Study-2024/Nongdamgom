관점 지향 프로그래밍(AOP)
: 관점을 기준으로 묶어 개발하는 방식
관점=> 어떤 기능을 구현할 때, 그 기능을 '핵심 기능'&'부가 기능'으로 구분해 각각을 하나의 관점으로 봄
핵심 기능=> 비즈니스 로직을 구현하는 과정에서, 비즈니스 로직이 처리하려는 목적 기능
ex) 클라이언트로부터 상품 정보 등록 요청을 받아 DB에 저장, 그 상품 정보를 조회하는 비즈니스 로직을 구현
-> (1) 상품 정보를 DB에 저장, (2) 저장된 상품 정보 데이터를 보여주는 코드 : 핵심 기능

핵심 기능+부가 기능의 경우
=> 비즈니스 로직에서 반복되는 부가 기능을 하나의 공통 로직으로 처리하도록 모듈화하여 삽임함: AOP
AOP 구현 방법
1. 컴파일 과정에 삽입하는 방식 2. 바이트코드를 메모리에 로드하는 과정에 삽입하는 방식 3. 프락시 패턴을 이용한 방식

스프링 AOP 목적=> OOP와 마찬가지로 모듈화해서 재사용 가능한 구성을 만듦, 모듈화된 객체를 편하게 적용-> 개발자가 비즈니스 로직을 구현하는 데만 집중할 수 있게 함
(OOP: 객체 지향 프로그래밍)